sh

mkdir projeto-pit1
cd projeto-pit1

git init

npm init -y

npm install express mongoose

projeto-pit1/
├── frontend/
│   ├── index.html
│   ├── styles.css
│   └── script.js
├── backend/
│   ├── server.js
│   └── models/
│       └── item.js
├── README.md
└── .gitignore

index.html
html
<!DOCTYPE html>
<html>
<head>
    <title>Projeto PIT I</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <h1>Bem-vindo ao Projeto PIT I</h1>
    <div id="app"></div>
    <script src="script.js"></script>
</body>
</html>
styles.css
css
body {
    font-family: Arial, sans-serif;
    text-align: center;
    margin: 0;
    padding: 0;
}

h1 {
    color: #333;
}
script.js

javascript
document.addEventListener('DOMContentLoaded', function() {
    const appDiv = document.getElementById('app');
    appDiv.innerHTML = '<p>Aplicação em funcionamento!</p>';
});

server.js

javascript
const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');

const app = express();
const port = process.env.PORT || 3000;

app.use(bodyParser.json());

mongoose.connect('mongodb://localhost/projeto-pit1', { useNewUrlParser: true, useUnifiedTopology: true });

const Item = require('./models/item');

// Rota para obter itens
app.get('/api/items', async (req, res) => {
    const items = await Item.find();
    res.json(items);
});

// Rota para criar item
app.post('/api/items', async (req, res) => {
    const newItem = new Item(req.body);
    await newItem.save();
    res.json(newItem);
});

app.listen(port, () => {
    console.log(`Server running at http://localhost:${port}`);
});
models/item.js

javascript
const mongoose = require('mongoose');

const itemSchema = new mongoose.Schema({
    name: String,
    description: String
});

module.exports = mongoose.model('Item', itemSchema);

sh
git add .
git commit -m "Projeto inicial do PIT I"
